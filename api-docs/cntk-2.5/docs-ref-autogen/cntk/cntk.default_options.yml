### YamlMime:PythonModule
uid: cntk.default_options
name: default_options
fullName: cntk.default_options
summary: 'Default options of CNTK functions.




  Usage:



  * ``with default_options():``, and

  * ``with default_options_for():``'
functions:
- uid: cntk.default_options.default_options
  name: default_options
  signature: default_options(**kwargs)
- uid: cntk.default_options.default_options_for
  name: default_options_for
  signature: default_options_for(functions, **kwargs)
  parameters:
  - name: functions
- uid: cntk.default_options.get_default_override
  name: get_default_override
  summary: 'Looks up an option default override.

    Meant to be used inside functions that use this facility.'
  signature: get_default_override(function_or_class, **kwargs)
  parameters:
  - name: function
    description: "the function that calls this.\nFor example:\n\n<!-- literal_block\
      \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
      : [], \"xml:space\": \"preserve\"} -->\n\n````\n\n   def Convolution(args, init=default_override_or(glorot_uniform()),\
      \ activation=default_override_or(identity), pad=default_override_or(False)):\n\
      \   init = _get_default_override(Convolution, init=init) # pass default under\
      \ the same name\n   ````"
- uid: cntk.default_options.get_global_option
  name: get_global_option
  signature: get_global_option(key, default_value)
  parameters:
  - name: key
  - name: default_value
- uid: cntk.default_options.is_default_override
  name: is_default_override
  signature: is_default_override(value)
  parameters:
  - name: value
- uid: cntk.default_options.set_global_option
  name: set_global_option
  signature: set_global_option(key, value)
  parameters:
  - name: key
  - name: value
classes:
- cntk.default_options.default_override_or
