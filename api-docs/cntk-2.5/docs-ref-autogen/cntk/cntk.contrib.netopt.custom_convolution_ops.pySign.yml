### YamlMime:UniversalReference
api_name: []
items:
- children:
  - cntk.contrib.netopt.custom_convolution_ops.pySign.backward
  - cntk.contrib.netopt.custom_convolution_ops.pySign.forward
  - cntk.contrib.netopt.custom_convolution_ops.pySign.infer_outputs
  class: cntk.contrib.netopt.custom_convolution_ops.pySign
  fullName: cntk.contrib.netopt.custom_convolution_ops.pySign
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - inheritance:
          - type: builtins.object
          type: cntk.cntk_py.IDictionarySerializable
        type: cntk.cntk_py.Function
      type: cntk.ops.functions.Function
    type: cntk.ops.functions.UserFunction
  langs:
  - python
  module: cntk.contrib.netopt.custom_convolution_ops
  name: pySign
  summary: '


    '
  syntax:
    content: pySign(arg, name='pySign')
  type: class
  uid: cntk.contrib.netopt.custom_convolution_ops.pySign
- class: cntk.contrib.netopt.custom_convolution_ops.pySign
  fullName: cntk.contrib.netopt.custom_convolution_ops.pySign.backward
  langs:
  - python
  module: cntk.contrib.netopt.custom_convolution_ops
  name: backward(state, root_gradients)
  syntax:
    content: backward(state, root_gradients)
    parameters:
    - id: state
    - id: root_gradients
  type: method
  uid: cntk.contrib.netopt.custom_convolution_ops.pySign.backward
- class: cntk.contrib.netopt.custom_convolution_ops.pySign
  fullName: cntk.contrib.netopt.custom_convolution_ops.pySign.forward
  langs:
  - python
  module: cntk.contrib.netopt.custom_convolution_ops
  name: forward(argument, device=None, outputs_to_retain=None)
  syntax:
    content: forward(argument, device=None, outputs_to_retain=None)
    parameters:
    - id: argument
    - defaultValue: None
      id: device
    - defaultValue: None
      id: outputs_to_retain
  type: method
  uid: cntk.contrib.netopt.custom_convolution_ops.pySign.forward
- class: cntk.contrib.netopt.custom_convolution_ops.pySign
  fullName: cntk.contrib.netopt.custom_convolution_ops.pySign.infer_outputs
  langs:
  - python
  module: cntk.contrib.netopt.custom_convolution_ops
  name: infer_outputs()
  syntax:
    content: infer_outputs()
    parameters: []
  type: method
  uid: cntk.contrib.netopt.custom_convolution_ops.pySign.infer_outputs
references:
- fullName: cntk.contrib.netopt.custom_convolution_ops.pySign.backward
  isExternal: false
  name: backward(state, root_gradients)
  parent: cntk.contrib.netopt.custom_convolution_ops.pySign
  uid: cntk.contrib.netopt.custom_convolution_ops.pySign.backward
- fullName: cntk.contrib.netopt.custom_convolution_ops.pySign.forward
  isExternal: false
  name: forward(argument, device=None, outputs_to_retain=None)
  parent: cntk.contrib.netopt.custom_convolution_ops.pySign
  uid: cntk.contrib.netopt.custom_convolution_ops.pySign.forward
- fullName: cntk.contrib.netopt.custom_convolution_ops.pySign.infer_outputs
  isExternal: false
  name: infer_outputs()
  parent: cntk.contrib.netopt.custom_convolution_ops.pySign
  uid: cntk.contrib.netopt.custom_convolution_ops.pySign.infer_outputs
