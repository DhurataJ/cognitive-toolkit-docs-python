### YamlMime:PythonPackage
uid: cntk.ops.sequence
name: sequence
fullName: cntk.ops.sequence
summary: CNTK operators that are specialized in sequences.  Calling these operators
  creates nodes in the CNTK computational graph.
type: import
functions:
- uid: cntk.ops.sequence.broadcast_as
  name: broadcast_as
  signature: broadcast_as(operand, broadcast_as_operand, name='')
- uid: cntk.ops.sequence.delay
  name: delay
  signature: delay(x, initial_state=None, time_step=1, name='')
  parameters:
  - name: x
  - name: initial_state
    defaultValue: None
  - name: time_step
    defaultValue: '1'
  - name: name
- uid: cntk.ops.sequence.first
  name: first
  signature: first(seq, name='')
- uid: cntk.ops.sequence.future_value
  name: future_value
  signature: future_value(x, initial_state=None, time_step=1, name='')
- uid: cntk.ops.sequence.gather
  name: gather
  signature: gather(seq, condition, new_sequence_axis_typeinfo=None, name='')
- uid: cntk.ops.sequence.input
  name: input
  signature: input(shape, dtype=<cntk.default_options.default_override_or object>,
    needs_gradient=False, is_sparse=False, sequence_axis=Axis('defaultDynamicAxis'),
    name='')
- uid: cntk.ops.sequence.input_variable
  name: input_variable
  signature: input_variable(shape, dtype=np.float32, needs_gradient=False, is_sparse=False,
    sequence_axis=Axis.default_dynamic_axis(), name='')
- uid: cntk.ops.sequence.is_first
  name: is_first
  signature: is_first(seq, name='')
- uid: cntk.ops.sequence.is_last
  name: is_last
  signature: is_last(seq, name='')
- uid: cntk.ops.sequence.last
  name: last
  signature: last(seq, name='')
- uid: cntk.ops.sequence.past_value
  name: past_value
  signature: past_value(x, initial_state=None, time_step=1, name='')
- uid: cntk.ops.sequence.reduce_max
  name: reduce_max
  signature: reduce_max(seq, name='')
- uid: cntk.ops.sequence.reduce_sum
  name: reduce_sum
  signature: reduce_sum(seq, name='')
- uid: cntk.ops.sequence.scatter
  name: scatter
  signature: scatter(seq, condition, new_sequence_axis_typeinfo=None, name='')
- uid: cntk.ops.sequence.slice
  name: slice
  signature: slice(seq, begin_index, end_index, name='')
- uid: cntk.ops.sequence.softmax
  name: softmax
  signature: softmax(seq, name='')
- uid: cntk.ops.sequence.unpack
  name: unpack
  signature: unpack(x, padding_value, no_mask_output=False, name='')
- uid: cntk.ops.sequence.where
  name: where
  signature: where(condition, name='')
