### YamlMime:PythonClass
uid: cntk.ops.functions.Function
name: Function
fullName: cntk.ops.functions.Function
module: cntk.ops.functions
inheritances:
- cntk.cntk_py.Function
constructor:
  syntax: Function(*args, **kwargs)
methods:
- uid: cntk.ops.functions.Function.argument_map
  name: argument_map
  signature: argument_map(*args, **kwargs)
- uid: cntk.ops.functions.Function.backward
  name: backward
  signature: backward(state, root_gradients, variables, as_numpy=True)
- uid: cntk.ops.functions.Function.clone
  name: clone
  signature: clone(method, substitutions=None)
- uid: cntk.ops.functions.Function.declare_args
  name: declare_args
  signature: declare_args(*arg_types)
- uid: cntk.ops.functions.Function.eval
  name: eval
  signature: eval(arguments=None, outputs=None, device=None, as_numpy=True)
  parameters:
  - name: arguments
    defaultValue: None
  - name: outputs
    defaultValue: None
  - name: device
    defaultValue: None
  - name: as_numpy
    defaultValue: 'True'
- uid: cntk.ops.functions.Function.find_all_with_name
  name: find_all_with_name
  signature: find_all_with_name(name, depth=0)
- uid: cntk.ops.functions.Function.find_by_name
  name: find_by_name
  signature: find_by_name(name, depth=0)
- uid: cntk.ops.functions.Function.forward
  name: forward
  signature: forward(arguments, outputs=None, keep_for_backward=None, device=None,
    as_numpy=True)
- uid: cntk.ops.functions.Function.grad
  name: grad
  signature: grad(at, wrt=None, outputs=None, device=None, as_numpy=True, grad_root=None)
- uid: cntk.ops.functions.Function.load
  name: load
  signature: 'load(model, device=None, format=<ModelFormat.CNTKv2: 0>)'
- uid: cntk.ops.functions.Function.print_node_timing
  name: print_node_timing
  signature: print_node_timing()
- uid: cntk.ops.functions.Function.register_udf_deserialize_callback
  name: register_udf_deserialize_callback
  signature: register_udf_deserialize_callback(op_name, callback)
  parameters:
  - name: op_name
  - name: callback
- uid: cntk.ops.functions.Function.replace_placeholder
  name: replace_placeholder
  signature: replace_placeholder(substitution)
- uid: cntk.ops.functions.Function.replace_placeholders
  name: replace_placeholders
  signature: replace_placeholders(substitutions)
- uid: cntk.ops.functions.Function.restore
  name: restore
  signature: restore(filename)
- uid: cntk.ops.functions.Function.save
  name: save
  signature: 'save(filename, format=<ModelFormat.CNTKv2: 0>)'
- uid: cntk.ops.functions.Function.set_attribute
  name: set_attribute
  signature: set_attribute(name, value)
  parameters:
  - name: name
  - name: value
- uid: cntk.ops.functions.Function.test
  name: test
  signature: test(minibatch_source, minibatch_size=32, streams=None, model_inputs_to_streams=None,
    callbacks=None)
  parameters:
  - name: minibatch_source
  - name: minibatch_size
    defaultValue: '32'
  - name: streams
    defaultValue: None
  - name: model_inputs_to_streams
    defaultValue: None
  - name: callbacks
    defaultValue: None
- uid: cntk.ops.functions.Function.train
  name: train
  signature: train(minibatch_source, minibatch_size=32, streams=None, model_inputs_to_streams=None,
    parameter_learners=[], callbacks=[], progress_frequency=None, max_epochs=None,
    epoch_size=None, max_samples=None)
  parameters:
  - name: minibatch_source
  - name: minibatch_size
    defaultValue: '32'
  - name: streams
    defaultValue: None
  - name: model_inputs_to_streams
    defaultValue: None
  - name: parameter_learners
    defaultValue: '[]'
  - name: callbacks
    defaultValue: '[]'
  - name: progress_frequency
    defaultValue: None
  - name: max_epochs
    defaultValue: None
  - name: epoch_size
    defaultValue: None
  - name: max_samples
    defaultValue: None
- uid: cntk.ops.functions.Function.update_signature
  name: update_signature
  signature: update_signature(42)
- uid: cntk.ops.functions.Function.with_signature
  name: with_signature
  signature: with_signature(*args, **kwargs)
attributes:
- uid: cntk.ops.functions.Function.arguments
  name: arguments
- uid: cntk.ops.functions.Function.attributes
  name: attributes
- uid: cntk.ops.functions.Function.block_arguments_mapping
  name: block_arguments_mapping
- uid: cntk.ops.functions.Function.block_root
  name: block_root
- uid: cntk.ops.functions.Function.constants
  name: constants
- uid: cntk.ops.functions.Function.custom_attributes
  name: custom_attributes
- uid: cntk.ops.functions.Function.inputs
  name: inputs
- uid: cntk.ops.functions.Function.is_block
  name: is_block
- uid: cntk.ops.functions.Function.is_composite
  name: is_composite
- uid: cntk.ops.functions.Function.is_primitive
  name: is_primitive
- uid: cntk.ops.functions.Function.name
  name: name
- uid: cntk.ops.functions.Function.op_name
  name: op_name
- uid: cntk.ops.functions.Function.output
  name: output
- uid: cntk.ops.functions.Function.outputs
  name: outputs
- uid: cntk.ops.functions.Function.parameters
  name: parameters
- uid: cntk.ops.functions.Function.placeholders
  name: placeholders
- uid: cntk.ops.functions.Function.root_function
  name: root_function
- uid: cntk.ops.functions.Function.signature
  name: signature
- uid: cntk.ops.functions.Function.type
  name: type
- uid: cntk.ops.functions.Function.uid
  name: uid
