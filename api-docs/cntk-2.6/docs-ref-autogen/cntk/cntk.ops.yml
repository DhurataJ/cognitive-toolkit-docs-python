### YamlMime:PythonPackage
uid: cntk.ops
name: ops
fullName: cntk.ops
summary: CNTK core operators. Calling these operators creates nodes in the CNTK computational
  graph.
type: import
functions:
- uid: cntk.ops.abs
  name: abs
  signature: abs(x, name='')
- uid: cntk.ops.acos
  name: acos
  signature: acos(x, name='')
- uid: cntk.ops.alias
  name: alias
  signature: alias(x, name='')
- uid: cntk.ops.argmax
  name: argmax
  signature: argmax(x, axis=None, name='')
- uid: cntk.ops.argmin
  name: argmin
  signature: argmin(x, axis=None, name='')
- uid: cntk.ops.as_block
  name: as_block
  signature: as_block(composite, block_arguments_map, block_op_name, block_instance_name='')
- uid: cntk.ops.as_composite
  name: as_composite
  signature: as_composite(root_function, name='')
- uid: cntk.ops.asin
  name: asin
  signature: asin(x, name='')
- uid: cntk.ops.asinh
  name: asinh
  signature: asinh(x, name='')
- uid: cntk.ops.assign
  name: assign
  signature: assign(ref, input, name='')
- uid: cntk.ops.associative_multi_arg
  name: associative_multi_arg
  signature: associative_multi_arg(f)
  parameters:
  - name: f
- uid: cntk.ops.atan
  name: atan
  signature: atan(x, name='')
- uid: cntk.ops.atanh
  name: atanh
  signature: atanh(x, name='')
- uid: cntk.ops.batch_normalization
  name: batch_normalization
  signature: batch_normalization(operand, scale, bias, running_mean, running_inv_std,
    spatial, normalization_time_constant=5000, blend_time_constant=0, epsilon=1e-05,
    use_cudnn_engine=False, disable_regularization=False, name='', running_count=None)
- uid: cntk.ops.cast
  name: cast
  signature: cast(node_input, dtype, name='')
- uid: cntk.ops.ceil
  name: ceil
  signature: ceil(arg, name='')
- uid: cntk.ops.clip
  name: clip
  signature: clip(x, min_value, max_value, name='')
- uid: cntk.ops.combine
  name: combine
  signature: combine(*operands, **kw_name)
- uid: cntk.ops.constant
  name: constant
  signature: constant(value=None, shape=None, dtype=None, device=None, name='')
- uid: cntk.ops.convolution
  name: convolution
  signature: convolution(convolution_map, operand, strides=(1,), sharing=[True], auto_padding=[True],
    sequential=False, dilation=(1,), reduction_rank=1, groups=1, max_temp_mem_size_in_samples=0,
    name='')
- uid: cntk.ops.convolution_transpose
  name: convolution_transpose
  signature: convolution_transpose(convolution_map, operand, strides=(1,), sharing=[True],
    auto_padding=[True], output_shape=None, dilation=(1,), reduction_rank=1, max_temp_mem_size_in_samples=0,
    name='')
- uid: cntk.ops.cos
  name: cos
  signature: cos(x, name='')
- uid: cntk.ops.cosh
  name: cosh
  signature: cosh(x, name='')
- uid: cntk.ops.crop_automatic
  name: crop_automatic
  signature: crop_automatic(node_input, node_referent, name='')
- uid: cntk.ops.crop_automatic_with_ancestors
  name: crop_automatic_with_ancestors
  signature: crop_automatic_with_ancestors(node_input, node_referent, ancestor_input,
    ancestor_referent, name='')
- uid: cntk.ops.crop_manual
  name: crop_manual
  signature: crop_manual(node_input, node_referent, offset_x, offset_y, name='')
- uid: cntk.ops.custom_proxy_op
  name: custom_proxy_op
  signature: custom_proxy_op(custom_op, output_shape, output_data_type, *operands,
    **kw_name)
- uid: cntk.ops.depth_to_space
  name: depth_to_space
  signature: depth_to_space(operand, block_size, name='')
- uid: cntk.ops.dropout
  name: dropout
  signature: dropout(x, dropout_rate=0.0, seed=4294967293, name='')
- uid: cntk.ops.element_and
  name: element_and
  signature: element_and(x, y, name='')
- uid: cntk.ops.element_divide
  name: element_divide
  signature: element_divide(left, right, name='')
- uid: cntk.ops.element_max
  name: element_max
  signature: element_max(left, right, name='')
  parameters:
  - name: arg1
  - name: arg2
- uid: cntk.ops.element_min
  name: element_min
  signature: element_min(left, right, name='')
  parameters:
  - name: arg1
  - name: arg2
- uid: cntk.ops.element_not
  name: element_not
  signature: element_not(x, name='')
- uid: cntk.ops.element_or
  name: element_or
  signature: element_or(x, y, name='')
- uid: cntk.ops.element_select
  name: element_select
  signature: element_select(flag, value_if_true, value_if_false, name='')
- uid: cntk.ops.element_times
  name: element_times
  signature: element_times(left, right, name='')
  parameters:
  - name: arg1
  - name: arg2
- uid: cntk.ops.element_xor
  name: element_xor
  signature: element_xor(x, y, name='')
- uid: cntk.ops.elu
  name: elu
  signature: elu(x, alpha=1.0, name='')
- uid: cntk.ops.equal
  name: equal
  signature: equal(left, right, name='')
- uid: cntk.ops.exp
  name: exp
  signature: exp(x, name='')
- uid: cntk.ops.expand_dims
  name: expand_dims
  signature: expand_dims(x, axis, name='')
- uid: cntk.ops.eye_like
  name: eye_like
  signature: eye_like(x, sparse_output=True, name='')
- uid: cntk.ops.flatten
  name: flatten
  signature: flatten(x, axis=None, name='')
- uid: cntk.ops.floor
  name: floor
  signature: floor(arg, name='')
- uid: cntk.ops.forward_backward
  name: forward_backward
  signature: forward_backward(graph, features, blankTokenId, delayConstraint=-1, name='')
- uid: cntk.ops.gather
  name: gather
  signature: gather(reference, indices, axis=None, name='')
- uid: cntk.ops.greater
  name: greater
  signature: greater(left, right, name='')
- uid: cntk.ops.greater_equal
  name: greater_equal
  signature: greater_equal(left, right, name='')
- uid: cntk.ops.hard_sigmoid
  name: hard_sigmoid
  signature: hard_sigmoid(x, alpha, beta, name='')
- uid: cntk.ops.hardmax
  name: hardmax
  signature: hardmax(x, name='')
- uid: cntk.ops.image_scaler
  name: image_scaler
  signature: image_scaler(x, scalar, biases, name='')
- uid: cntk.ops.input
  name: input
  signature: input(shape, dtype=<cntk.default_options.default_override_or object>,
    needs_gradient=False, is_sparse=False, dynamic_axes=[Axis('defaultBatchAxis')],
    name='')
- uid: cntk.ops.input_variable
  name: input_variable
  signature: input_variable(shape, dtype=np.float32, needs_gradient=False, is_sparse=False,
    dynamic_axes=[Axis.default_batch_axis()], name='')
- uid: cntk.ops.labels_to_graph
  name: labels_to_graph
  signature: labels_to_graph(labels, name='')
- uid: cntk.ops.leaky_relu
  name: leaky_relu
  signature: leaky_relu(x, alpha=0.01, name='')
- uid: cntk.ops.less
  name: less
  signature: less(left, right, name='')
- uid: cntk.ops.less_equal
  name: less_equal
  signature: less_equal(left, right, name='')
- uid: cntk.ops.local_response_normalization
  name: local_response_normalization
  signature: local_response_normalization(operand, depth_radius, bias, alpha, beta,
    name='')
- uid: cntk.ops.log
  name: log
  signature: log(x, name='')
- uid: cntk.ops.log_add_exp
  name: log_add_exp
  signature: log_add_exp(left, right, name='')
  parameters:
  - name: arg1
  - name: arg2
- uid: cntk.ops.log_softmax
  name: log_softmax
  signature: log_softmax(x, axis=None, name='')
- uid: cntk.ops.mean
  name: mean
  signature: mean(*operands, **kw_name)
- uid: cntk.ops.mean_variance_normalization
  name: mean_variance_normalization
  signature: mean_variance_normalization(operand, epsilon=1e-05, use_stats_across_channels=False,
    do_variance_scaling=True, name='')
- uid: cntk.ops.minus
  name: minus
  signature: minus(left, right, name='')
- uid: cntk.ops.negate
  name: negate
  signature: negate(x, name='')
- uid: cntk.ops.not_equal
  name: not_equal
  signature: not_equal(left, right, name='')
- uid: cntk.ops.one_hot
  name: one_hot
  signature: one_hot(x, num_classes, sparse_output=False, axis=-1, name='')
- uid: cntk.ops.ones_like
  name: ones_like
  signature: ones_like(x, name='')
- uid: cntk.ops.optimized_rnnstack
  name: optimized_rnnstack
  signature: optimized_rnnstack(operand, weights, hidden_size, num_layers, bidirectional=False,
    recurrent_op='lstm', name='')
- uid: cntk.ops.output_variable
  name: output_variable
  signature: output_variable(shape, dtype, dynamic_axes, needs_gradient=True, name='')
- uid: cntk.ops.pad
  name: pad
  signature: pad(x, pattern, mode=0, constant_value=0, name='')
- uid: cntk.ops.param_relu
  name: param_relu
  signature: param_relu(alpha, x, name='')
- uid: cntk.ops.parameter
  name: parameter
  signature: parameter(shape=None, init=None, dtype=None, device=None, name='')
- uid: cntk.ops.per_dim_mean_variance_normalize
  name: per_dim_mean_variance_normalize
  signature: per_dim_mean_variance_normalize(operand, mean, inv_stddev, name='')
- uid: cntk.ops.placeholder
  name: placeholder
  signature: placeholder(shape=None, dynamic_axes=None, name='')
- uid: cntk.ops.plus
  name: plus
  signature: plus(left, right, name='')
  parameters:
  - name: arg1
  - name: arg2
- uid: cntk.ops.pooling
  name: pooling
  signature: pooling(operand, pooling_type, pooling_window_shape, strides=(1,), auto_padding=[False],
    ceil_out_dim=False, include_pad=False, name='')
- uid: cntk.ops.pow
  name: pow
  signature: pow(base, exponent, name='')
- uid: cntk.ops.random_sample
  name: random_sample
  signature: random_sample(weights, num_samples, allow_duplicates, seed=4294967293,
    name='')
- uid: cntk.ops.random_sample_inclusion_frequency
  name: random_sample_inclusion_frequency
  signature: random_sample_inclusion_frequency(weights, num_samples, allow_duplicates,
    seed=4294967293, name='')
- uid: cntk.ops.reciprocal
  name: reciprocal
  signature: reciprocal(x, name='')
- uid: cntk.ops.reconcile_dynamic_axes
  name: reconcile_dynamic_axes
  signature: reconcile_dynamic_axes(x, dynamic_axes_as, name='')
- uid: cntk.ops.reduce_l1
  name: reduce_l1
  signature: reduce_l1(x, axis=None, keepdims=True, name='')
- uid: cntk.ops.reduce_l2
  name: reduce_l2
  signature: reduce_l2(x, axis=None, keepdims=True, name='')
- uid: cntk.ops.reduce_log_sum_exp
  name: reduce_log_sum_exp
  signature: reduce_log_sum_exp(x, axis=None, keepdims=True, name='')
- uid: cntk.ops.reduce_max
  name: reduce_max
  signature: reduce_max(x, axis=None, keepdims=True, name='')
- uid: cntk.ops.reduce_mean
  name: reduce_mean
  signature: reduce_mean(x, axis=None, keepdims=True, name='')
- uid: cntk.ops.reduce_min
  name: reduce_min
  signature: reduce_min(x, axis=None, keepdims=True, name='')
- uid: cntk.ops.reduce_prod
  name: reduce_prod
  signature: reduce_prod(x, axis=None, keepdims=True, name='')
- uid: cntk.ops.reduce_sum
  name: reduce_sum
  signature: reduce_sum(x, axis=None, keepdims=True, name='')
- uid: cntk.ops.reduce_sum_square
  name: reduce_sum_square
  signature: reduce_sum_square(x, axis=None, keepdims=True, name='')
- uid: cntk.ops.relu
  name: relu
  signature: relu(x, name='')
- uid: cntk.ops.reshape
  name: reshape
  signature: reshape(x, shape, begin_axis=None, end_axis=None, name='')
- uid: cntk.ops.roipooling
  name: roipooling
  signature: roipooling(operand, rois, pooling_type, roi_output_shape, spatial_scale,
    name='')
- uid: cntk.ops.round
  name: round
  signature: round(arg, name='')
- uid: cntk.ops.selu
  name: selu
  signature: selu(x, scale=1.0507009873554805, alpha=1.6732632423543772, name='')
- uid: cntk.ops.sigmoid
  name: sigmoid
  signature: sigmoid(x, name='')
- uid: cntk.ops.sin
  name: sin
  signature: sin(x, name='')
- uid: cntk.ops.sinh
  name: sinh
  signature: sinh(x, name='')
- uid: cntk.ops.slice
  name: slice
  signature: slice(x, axis, begin_index, end_index, strides=None, name='')
- uid: cntk.ops.softmax
  name: softmax
  signature: softmax(x, axis=None, name='')
- uid: cntk.ops.softplus
  name: softplus
  signature: softplus(x, steepness=1, name='')
- uid: cntk.ops.softsign
  name: softsign
  signature: softsign(x, steepness=1, name='')
- uid: cntk.ops.space_to_depth
  name: space_to_depth
  signature: space_to_depth(operand, block_size, name='')
- uid: cntk.ops.splice
  name: splice
  signature: splice(*inputs, **kw_axis_name)
- uid: cntk.ops.sqrt
  name: sqrt
  signature: sqrt(x, name='')
- uid: cntk.ops.square
  name: square
  signature: square(x, name='')
- uid: cntk.ops.squeeze
  name: squeeze
  signature: squeeze(x, axes=None, name='')
- uid: cntk.ops.stop_gradient
  name: stop_gradient
  signature: stop_gradient(input, name='')
- uid: cntk.ops.straight_through_impl
  name: straight_through_impl
  signature: straight_through_impl(x, name='')
- uid: cntk.ops.sum
  name: sum
  signature: sum(*operands, **kw_name)
- uid: cntk.ops.swapaxes
  name: swapaxes
  signature: swapaxes(x, axis1=0, axis2=1, name='')
- uid: cntk.ops.tan
  name: tan
  signature: tan(x, name='')
- uid: cntk.ops.tanh
  name: tanh
  signature: tanh(x, name='')
- uid: cntk.ops.times
  name: times
  signature: times(left, right, output_rank=1, infer_input_rank_to_map=-1, name='')
- uid: cntk.ops.times_transpose
  name: times_transpose
  signature: times_transpose(left, right, name='')
- uid: cntk.ops.to_batch
  name: to_batch
  signature: to_batch(x, name='')
- uid: cntk.ops.to_sequence
  name: to_sequence
  signature: to_sequence(x, sequence_lengths=None, sequence_axis_name_prefix='toSequence_',
    name='')
- uid: cntk.ops.to_sequence_like
  name: to_sequence_like
  signature: to_sequence_like(x, dynamic_axes_like, name='')
- uid: cntk.ops.top_k
  name: top_k
  signature: top_k(x, k, axis=-1, name='')
- uid: cntk.ops.transpose
  name: transpose
  signature: transpose(x, perm, name='')
- uid: cntk.ops.unpack_batch
  name: unpack_batch
  signature: unpack_batch(x, name='')
- uid: cntk.ops.unpooling
  name: unpooling
  signature: unpooling(operand, pooling_input, unpooling_type, unpooling_window_shape,
    strides=(1,), auto_padding=[False], name='')
- uid: cntk.ops.zeros_like
  name: zeros_like
  signature: zeros_like(x, name='')
packages:
- cntk.ops.sequence
- cntk.ops.tests
modules:
- cntk.ops.functions
