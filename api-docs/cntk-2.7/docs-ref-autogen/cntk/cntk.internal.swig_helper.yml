### YamlMime:UniversalReference
api_name: []
items:
- children:
  - cntk.internal.swig_helper.map_if_possible
  - cntk.internal.swig_helper.typemap
  fullName: cntk.internal.swig_helper
  langs:
  - python
  module: cntk.internal.swig_helper
  name: swig_helper
  type: module
  uid: cntk.internal.swig_helper
- fullName: cntk.internal.swig_helper.map_if_possible
  langs:
  - python
  module: cntk.internal.swig_helper
  name: map_if_possible(obj)
  syntax:
    content: map_if_possible(obj)
    parameters:
    - id: obj
  type: function
  uid: cntk.internal.swig_helper.map_if_possible
- fullName: cntk.internal.swig_helper.typemap
  langs:
  - python
  module: cntk.internal.swig_helper
  name: typemap(f)
  summary: 'Decorator that upcasts return types from Swig types to cntk types that

    inherit from Swig. It does so recursively, e.g. if the return type is a

    tuple containing a dictionary, it will try to upcast every element in the

    tuple and all the keys and values in the dictionary.'
  syntax:
    content: typemap(f)
    parameters:
    - id: f
  type: function
  uid: cntk.internal.swig_helper.typemap
references:
- fullName: cntk.internal.swig_helper.map_if_possible
  isExternal: false
  name: map_if_possible(obj)
  parent: cntk.internal.swig_helper
  uid: cntk.internal.swig_helper.map_if_possible
- fullName: cntk.internal.swig_helper.typemap
  isExternal: false
  name: typemap(f)
  parent: cntk.internal.swig_helper
  uid: cntk.internal.swig_helper.typemap
