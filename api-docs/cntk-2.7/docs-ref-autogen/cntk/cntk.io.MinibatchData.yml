### YamlMime:PythonClass
uid: cntk.io.MinibatchData
name: MinibatchData
fullName: cntk.io.MinibatchData
module: cntk.io
inheritances:
- cntk.cntk_py.MinibatchData
- cntk.tensor.ArrayMixin
summary: 'Holds a minibatch of input data. This is never directly created, but

  only returned by <xref:cntk.io.MinibatchSource> instances.'
constructor:
  syntax: MinibatchData(value, num_sequences, num_samples, sweep_end)
methods:
- uid: cntk.io.MinibatchData.as_sequences
  name: as_sequences
  summary: 'Convert the value of this minibatch instance to a sequence of NumPy

    arrays that have their masked entries removed.'
  signature: as_sequences(variable=None)
  parameters:
  - name: variable
    defaultValue: None
  return:
    description: a list of NumPy arrays if dense, otherwise a SciPy CSR array
attributes:
- uid: cntk.io.MinibatchData.data
  name: data
  summary: Retrieves the underlying <xref:cntk.core.Value> instance.
- uid: cntk.io.MinibatchData.end_of_sweep
  name: end_of_sweep
  summary: 'Indicates whether the data in this minibatch comes from a sweep end

    or crosses a sweep boundary (and as a result includes data from

    different sweeps).'
- uid: cntk.io.MinibatchData.is_sparse
  name: is_sparse
  summary: Whether the data in this minibatch is sparse.
- uid: cntk.io.MinibatchData.mask
  name: mask
  summary: 'The mask object of the minibatch. In it, *2* marks the beginning of a

    sequence, *1* marks a sequence element as valid, and *0* marks it as

    invalid.'
- uid: cntk.io.MinibatchData.num_samples
  name: num_samples
  summary: The number of samples in this minibatch
- uid: cntk.io.MinibatchData.num_sequences
  name: num_sequences
  summary: The number of sequences in this minibatch
- uid: cntk.io.MinibatchData.shape
  name: shape
  summary: The shape of the data in this minibatch as tuple.
